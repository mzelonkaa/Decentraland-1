/// <reference types="@decentraland/web3-provider" />
/// <reference types="env" />
import * as eth from 'eth-connect';
import { CurrenciesData, MarketData, Currency } from './types/types';
import { Kyberswap } from './kyberswap';
export declare function getContract(contractAddress: eth.Address): Promise<{
    contract: Kyberswap;
    provider: import("@decentraland/web3-provider").Provider;
    requestManager: eth.RequestManager;
}>;
/**
 * Retrieves all the currencies on Kyberswap
 */
export declare function getCurrencies(): Promise<CurrenciesData>;
/**
 * Retrieves the data of a currency
 *
 * @param curr address, symbol or name of a currency
 */
export declare function getACurrency(curr: string): Promise<Currency | undefined>;
/**
 * Retrieves the trading pairs on Kyberswap
 */
export declare function getMarketPair(): Promise<MarketData>;
/**
 * Retrieves the estimated amount to be exchanged
 *
 * @param src Token address of the source
 * @param dest Token address of the destination
 * @param srcAmount Amount in ether
 *
 * @example
 * This example returns the estimated amount of MANA for 1 ETH
 * ```ts
 * await getQuote("0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee", "0x0f5d2fb29fb7d3cfee444a200298f468908cc942", "1")
 * ```
 */
export declare function getQuote(src: string, dest: string, srcAmount: string): Promise<{
    data: number;
    error: boolean;
}>;
/**
 * Retrieves estimated price and slippage
 *
 * @param src Token address of the source
 * @param dest Token address of the destination
 * @param srcAmount Amount in ether
 */
export declare function getExpectedRate(src: string, dest: string, srcAmount: string): Promise<{
    error: boolean;
    expectedRate: number;
    slippageRate: number;
    timestamp: number;
}>;
/**
 * Execute the transaction to exchange the tokens
 *
 * @param srcToken Token symbol of the currency to send
 * @param destToken Token symbol of the currency to receive
 * @param srcAmount Amount in ether (ie: 1 = 1 MANA or 1 ETH)
 * @param slippage Max slippage in percentage (default is 3%)
 */
export declare function exchange(srcToken: string, destToken: string, srcAmount: number, slippage?: number): Promise<void>;
