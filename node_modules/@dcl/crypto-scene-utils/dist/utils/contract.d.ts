/// <reference types="@decentraland/web3-provider" />
/// <reference types="env" />
import * as eth from 'eth-connect';
export declare const mainnet: {
    MANAToken: string;
    LANDRegistry: string;
    LANDProxy: string;
    TerraformReserve: string;
    ReturnVesting: string;
    LegacyMarketplace: string;
    Marketplace: string;
    MarketplaceProxy: string;
    ServiceLocator: string;
    MortgageHelper: string;
    MortgageManager: string;
    RCNEngine: string;
    RCNToken: string;
    KyberOracle: string;
    DecentralandInvite: string;
    EstateRegistry: string;
    EstateProxy: string;
    LANDAuction: string;
    MANABurner: string;
    MultiSigWallet: string;
    Nobody: string;
    ERC721Bid: string;
    BidMANABurner: string;
    MultisigContractOwner: string;
    AvatarNameRegistry: string;
    AvatarNameRegistryProxy: string;
    ExclusiveMasksCollection: string;
    Halloween2019Collection: string;
    Halloween2019CollectionFactory: string;
    Xmas2019Collection: string;
    DCLRegistrar: string;
    DCLController: string;
    Catalyst: string;
    CatalystProxy: string;
    MCHCollection: string;
    CommunityContestCollection: string;
    DCLLaunchCollection: string;
    DCGCollection: string;
    StaySafeCollection: string;
    StaySafeDonation: string;
    ClaimWearableForFree: string;
    Moonshot2020Collection: string;
    DAOAgent: string;
    LANDMiniMeToken: string;
    EstateMiniMeToken: string;
    BuyAdapter: string;
    AdapterFeeCollector: string;
    AdapterConverter: string;
    DappcraftMoonminerCollection: string;
    DGSummer2020Collection: string;
    PMOuttathisworldCollection: string;
    DgtbleHeadspaceCollection: string;
    WonderzoneMeteorchaserCollection: string;
    BurningStore: string;
    BaseList: string;
    POIAllowListProxy: string;
    NameDenyListProxy: string;
};
export declare const ropsten: {
    PrivateNodeWallet: string;
    MANAToken: string;
    LANDRegistry: string;
    LANDProxy: string;
    TerraformReserve: string;
    ReturnVesting: string;
    LegacyMarketplace: string;
    Marketplace: string;
    MarketplaceProxy: string;
    ServiceLocator: string;
    MortgageHelper: string;
    MortgageManager: string;
    RCNEngine: string;
    RCNToken: string;
    KyberOracle: string;
    DecentralandInvite: string;
    EstateRegistry: string;
    EstateProxy: string;
    ERC721Bid: string;
    BidMANABurner: string;
    AvatarNameRegistry: string;
    AvatarNameRegistryProxy: string;
    ExclusiveMasksCollection: string;
    DCLRegistrar: string;
    DCLController: string;
    Catalyst: string;
    BuyAdapter: string;
    AdapterFeeCollector: string;
    AdapterConverter: string;
    POIAllowlist: string;
    NAMEDenylist: string;
};
export declare const kovan: {
    MANAToken: string;
    LANDRegistry: string;
    LANDProxy: string;
    Marketplace: string;
};
export declare const rinkeby: {
    MANAToken: string;
    LANDProxy: string;
    LANDRegistry: string;
    Multisig: string;
};
export declare function getContract(contractAddress: string, abi: any): Promise<{
    contract: any;
    provider: import("@decentraland/web3-provider").Provider;
    requestManager: eth.RequestManager;
}>;
